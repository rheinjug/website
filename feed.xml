<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.7.4">Jekyll</generator><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="/" rel="alternate" type="text/html" /><updated>2024-11-16T08:49:32+00:00</updated><id>/feed.xml</id><title type="html">rheinjug</title><subtitle>Die rheinjug bietet alle ein bis zwei Monate Fachvorträge an der Heinrich Heine Universität in Düsseldorf. Eingeladen sind alle Java-Interessierten, egal ob Profi oder Hobbyist.</subtitle><entry><title type="html">Digitale Innovation: Von der Idee zur Wirkung (Prof. Steffi Haag)</title><link href="/rheinjug/event/2024/10/24/digitale-innovation-von-der-idee-zur-wirkung-prof-steffi-haag.html" rel="alternate" type="text/html" title="Digitale Innovation: Von der Idee zur Wirkung (Prof. Steffi Haag)" /><published>2024-10-24T13:55:05+00:00</published><updated>2024-10-24T13:55:05+00:00</updated><id>/rheinjug/event/2024/10/24/digitale-innovation-von-der-idee-zur-wirkung-prof-steffi-haag</id><content type="html" xml:base="/rheinjug/event/2024/10/24/digitale-innovation-von-der-idee-zur-wirkung-prof-steffi-haag.html">&lt;p&gt;**Abstract**&lt;br /&gt;Was ist erforderlich, um aus einer Idee ein konkretes marktfähiges Produkt zu machen mit Anziehungskraft auf die Zielgruppe und nachhaltiger Wirkung auf Wirtschaft und Gesellschaft?&lt;br /&gt;Ich stelle Methoden vor, um eigene digitale Ideen zu kreieren, zu bewerten, in ein digitales Produkt zu übersetzen und erfolgreich zu vermarkten.&lt;/p&gt;
&lt;p&gt;**Sprecherin**&lt;br /&gt;Steffi Haag ist Professorin für digitale Innovation und Entrepreneurship am Institut für Informatik der Heinrich-Heine-Universität (HHU) Düsseldorf, Deutschland. Sie untersucht die Spannungsfelder, die zwischen dem Management digitaler Innovation und Cybersicherheit entstehen, wobei sie insbesondere die Nutzungsperspektive einnimmt. Ihre Forschung wurde in hochrangigen Zeitschriften der Wirtschaftsinformatik (z. B. *MIS Quarterly*) sowie in den Proceedings führender IS-Konferenzen veröffentlicht. Sie ist Schöller Fellow und erhielt mehrere Auszeichnungen für ihre Forschung, darunter den Hermann Gutmann Preis 2023, den HMD Best Paper Award 2018 und den Forschungspreis für Datenschutz und Datensicherheit 2017.&lt;br /&gt;An der HHU schlägt sie eine Brücke zwischen der mathematisch-naturwissenschaftlichen und wirtschaftswissenschaftlichen Fakultät und arbeitet mit dem Center for Entrepreneurship Düsseldorf zusammen, um Informatik- und Wirtschaftsstudierende zu inspirieren, eigene Tech Startups zu gründen.&lt;/p&gt;</content><author><name></name></author><summary type="html">**Abstract**Was ist erforderlich, um aus einer Idee ein konkretes marktfähiges Produkt zu machen mit Anziehungskraft auf die Zielgruppe und nachhaltiger Wirkung auf Wirtschaft und Gesellschaft?Ich stelle Methoden vor, um eigene digitale Ideen zu kreieren, zu bewerten, in ein digitales Produkt zu übersetzen und erfolgreich zu vermarkten. **Sprecherin**Steffi Haag ist Professorin für digitale Innovation und Entrepreneurship am Institut für Informatik der Heinrich-Heine-Universität (HHU) Düsseldorf, Deutschland. Sie untersucht die Spannungsfelder, die zwischen dem Management digitaler Innovation und Cybersicherheit entstehen, wobei sie insbesondere die Nutzungsperspektive einnimmt. Ihre Forschung wurde in hochrangigen Zeitschriften der Wirtschaftsinformatik (z. B. *MIS Quarterly*) sowie in den Proceedings führender IS-Konferenzen veröffentlicht. Sie ist Schöller Fellow und erhielt mehrere Auszeichnungen für ihre Forschung, darunter den Hermann Gutmann Preis 2023, den HMD Best Paper Award 2018 und den Forschungspreis für Datenschutz und Datensicherheit 2017.An der HHU schlägt sie eine Brücke zwischen der mathematisch-naturwissenschaftlichen und wirtschaftswissenschaftlichen Fakultät und arbeitet mit dem Center for Entrepreneurship Düsseldorf zusammen, um Informatik- und Wirtschaftsstudierende zu inspirieren, eigene Tech Startups zu gründen.</summary></entry><entry><title type="html">EntwickelBar Reboot</title><link href="/rheinjug/event/2024/09/21/entwickelbar-reboot.html" rel="alternate" type="text/html" title="EntwickelBar Reboot" /><published>2024-09-21T13:55:05+00:00</published><updated>2024-09-21T13:55:05+00:00</updated><id>/rheinjug/event/2024/09/21/entwickelbar-reboot</id><content type="html" xml:base="/rheinjug/event/2024/09/21/entwickelbar-reboot.html">&lt;p&gt;EntwickelBar ist eine Unconference, die nach der Open Space Methode organisiert und moderiert wird. Anstatt ein Programm vorher fest zu definieren, laden wir die Community ein das Programm mitzugestalten. Inhaltlich wollen wir auf alle Themen konzentrieren, die irgendwas mit der Softwareentwicklung zu tun haben.&lt;/p&gt;
&lt;p&gt;Jeder ist eingeladen etwas beizutragen: einen Vortrag halten, eine Diskussionsrunde starten oder einfach eine Frage an anderen Teilnehmer stellen und schauen, was dabei rauskommt.&lt;/p&gt;
&lt;p&gt;Was uns dabei wichtig ist: jeder hat die Gelegenheit etwas beizutragen und jeder hat die Gelegenheit etwas Neues zu lernen. Deswegen heißen wir EntwickelBar: Damit wir uns genauso wie unsere Software weiterentwickeln können.&lt;/p&gt;
&lt;p&gt;***&lt;/p&gt;
&lt;p&gt;Weitere Informationen, Rückblick, Bilder und Notizen zur vergangenen EntwickelBar Veranstaltungen findet ihr auf unserer Homepage: &lt;a href=&quot;https://entwickelbar.github.io&quot; class=&quot;linkified&quot;&gt;https://entwickelbar.github.io&lt;/a&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html">EntwickelBar ist eine Unconference, die nach der Open Space Methode organisiert und moderiert wird. Anstatt ein Programm vorher fest zu definieren, laden wir die Community ein das Programm mitzugestalten. Inhaltlich wollen wir auf alle Themen konzentrieren, die irgendwas mit der Softwareentwicklung zu tun haben. Jeder ist eingeladen etwas beizutragen: einen Vortrag halten, eine Diskussionsrunde starten oder einfach eine Frage an anderen Teilnehmer stellen und schauen, was dabei rauskommt. Was uns dabei wichtig ist: jeder hat die Gelegenheit etwas beizutragen und jeder hat die Gelegenheit etwas Neues zu lernen. Deswegen heißen wir EntwickelBar: Damit wir uns genauso wie unsere Software weiterentwickeln können. *** Weitere Informationen, Rückblick, Bilder und Notizen zur vergangenen EntwickelBar Veranstaltungen findet ihr auf unserer Homepage: https://entwickelbar.github.io</summary></entry><entry><title type="html">Virtual Threads und Structured Concurrency (Cay Horstmann)</title><link href="/rheinjug/event/2024/07/18/virtual-threads-und-structured-concurrency-cay-horstmann.html" rel="alternate" type="text/html" title="Virtual Threads und Structured Concurrency (Cay Horstmann)" /><published>2024-07-18T13:55:05+00:00</published><updated>2024-07-18T13:55:05+00:00</updated><id>/rheinjug/event/2024/07/18/virtual-threads-und-structured-concurrency-cay-horstmann</id><content type="html" xml:base="/rheinjug/event/2024/07/18/virtual-threads-und-structured-concurrency-cay-horstmann.html">&lt;p&gt;**Abstract**&lt;br /&gt;Projekt Loom bringt &quot;virtuelle&quot; Threads auf die Java-Plattform. Nach einer Einführung in die Konzepte der virtuellen Threads und der strukturierten Parallelität möchte der Vortrag Antworten zu praktischen Fragen liefern: Warum sollten Sie sich um Loom kümmern, wenn Sie niemals eine Million gleichzeitige Tasks ausführen werden? Wie wählen Sie zwischen virtuellen und Plattform-Threads? Wenn das Blockieren kostengünstig ist, gibt es immer noch einen Vorteil für das reaktive Programmieren? Welche Teile von &quot;Concurrency in Practice&quot; sind jetzt veraltet, und was ist immer noch relevant? Welche Synchronisationsmechanismen und Entwurfsmuster sollten Sie bevorzugen? Wie debuggen und profilieren Sie virtuelle Threads? Welche Fallstricke müssen Sie erkennen, wenn Sie Ihren aktuellen Code umstrukturieren, um virtuelle Threads zu nutzen? Wie strukturieren Sie neuen Code am besten?&lt;/p&gt;
&lt;p&gt;**Sprecher**&lt;br /&gt;Cay wuchs in Norddeutschland auf, aber Stipendien lockten ihn in die USA, wo er einen M.S. in Informatik und einen Ph.D. in Mathematik an der University of Michigan erlangte. Er unterrichtete fast dreißig Jahre Informatik an der San Jose State University und hatte Gastprofessuren an Universitäten in Deutschland, der Schweiz, Vietnam und Macau inne. Er war CEO eines Softwareunternehmens vor dem Internetzeitalter und VP und CTO eines dotcom-Startups, das von drei Personen in einem winzigen Büro zu einem börsennotierten Unternehmen wurde. In seiner reichlichen Freizeit schreibt er Bücher, darunter den internationalen Bestseller &quot;Core Java&quot;, und entwickelt Online-Lernerfahrungen für Anfänger und professionelle Programmierer.&lt;/p&gt;</content><author><name></name></author><summary type="html">**Abstract**Projekt Loom bringt &quot;virtuelle&quot; Threads auf die Java-Plattform. Nach einer Einführung in die Konzepte der virtuellen Threads und der strukturierten Parallelität möchte der Vortrag Antworten zu praktischen Fragen liefern: Warum sollten Sie sich um Loom kümmern, wenn Sie niemals eine Million gleichzeitige Tasks ausführen werden? Wie wählen Sie zwischen virtuellen und Plattform-Threads? Wenn das Blockieren kostengünstig ist, gibt es immer noch einen Vorteil für das reaktive Programmieren? Welche Teile von &quot;Concurrency in Practice&quot; sind jetzt veraltet, und was ist immer noch relevant? Welche Synchronisationsmechanismen und Entwurfsmuster sollten Sie bevorzugen? Wie debuggen und profilieren Sie virtuelle Threads? Welche Fallstricke müssen Sie erkennen, wenn Sie Ihren aktuellen Code umstrukturieren, um virtuelle Threads zu nutzen? Wie strukturieren Sie neuen Code am besten? **Sprecher**Cay wuchs in Norddeutschland auf, aber Stipendien lockten ihn in die USA, wo er einen M.S. in Informatik und einen Ph.D. in Mathematik an der University of Michigan erlangte. Er unterrichtete fast dreißig Jahre Informatik an der San Jose State University und hatte Gastprofessuren an Universitäten in Deutschland, der Schweiz, Vietnam und Macau inne. Er war CEO eines Softwareunternehmens vor dem Internetzeitalter und VP und CTO eines dotcom-Startups, das von drei Personen in einem winzigen Büro zu einem börsennotierten Unternehmen wurde. In seiner reichlichen Freizeit schreibt er Bücher, darunter den internationalen Bestseller &quot;Core Java&quot;, und entwickelt Online-Lernerfahrungen für Anfänger und professionelle Programmierer.</summary></entry><entry><title type="html">Hexagonale-, Onion und Clean-Architektur – Unterschiede und Gemeinsamkeiten</title><link href="/rheinjug/event/2024/06/27/hexagonale-onion-und-clean-architektur-unterschiede-und-gemeinsamkeiten.html" rel="alternate" type="text/html" title="Hexagonale-, Onion und Clean-Architektur – Unterschiede und Gemeinsamkeiten" /><published>2024-06-27T13:55:05+00:00</published><updated>2024-06-27T13:55:05+00:00</updated><id>/rheinjug/event/2024/06/27/hexagonale--onion-und-clean-architektur---unterschiede-und-gemeinsamkeiten</id><content type="html" xml:base="/rheinjug/event/2024/06/27/hexagonale-onion-und-clean-architektur-unterschiede-und-gemeinsamkeiten.html">&lt;p&gt;In der heutigen Zeit werden Software-Anwendungen immer komplexer und anspruchsvoller, und damit steigen die Anforderungen an die Architektur.&lt;br /&gt;Im Rahmen des Domain-Driven Designs wurden verschiedene Architekturstile etabliert, wie die Hexagonal-Architektur, die Onion-Architektur und die Clean-Architektur. Diese Architekturen zielen darauf ab, die fachliche Komplexität von der technischen Umsetzung zu trennen. Diese Trennung führt zu einer besseren Wartbarkeit und Erweiterbarkeit der Software, da die Fachlichkeit unabhängig von der Technik entwickelt werden kann und Änderungen an der Technik im besten Fall keine Auswirkungen auf den fachlichen Code haben.&lt;br /&gt;Domain-Driven Design unterstützt bei der Umsetzung dieser Architekturen, indem es Ansätze in Form von Prinzipien, Methoden und Mustern bietet, um die fachliche Komplexität zu bewältigen und die Domäne klar in der Softwarearchitektur abzubilden.&lt;br /&gt;In diesem Talk geben wir zunächst einen kurzen Überblick über DDD allgemein und über die wichtigsten Muster dessen taktischen Designs. Im Hauptteil des Talks gehen wir dann auf die verschiedenen Architekturstile genauer ein.&lt;/p&gt;
&lt;p&gt;**Lernziele:**&lt;/p&gt;
&lt;p&gt;* Wie und warum haben sich die unterschiedlichen Architekturen entwickelt?&lt;br /&gt;* Welche Unterschiede und Gemeinsamkeiten haben die verschiedenen Architekturen – oder ist das letztlich nicht alles das Gleiche?&lt;br /&gt;* Welche typischen Problemstellungen ergeben sich bei der Verwendung derartiger Architekturen?&lt;br /&gt;* Für welche Art von Anwendungen sind diese Architekturen geeignet?&lt;/p&gt;
&lt;p&gt;**\|**&lt;br /&gt;**Sprecherin:**&lt;br /&gt;**Gulmariyam Yerzhanova** ist Junior Software Engineer bei Accso. Während ihres Studiums entdeckte sie ihre Leidenschaft für den Bereich Softwarearchitektur und Domain-Driven Design. Dies zeigt sich nicht nur in ihrer täglichen Arbeit, sondern auch in ihrem Streben nach kontinuierlicher Weiterbildung und persönlicher Entwicklung&lt;/p&gt;</content><author><name></name></author><summary type="html">In der heutigen Zeit werden Software-Anwendungen immer komplexer und anspruchsvoller, und damit steigen die Anforderungen an die Architektur.Im Rahmen des Domain-Driven Designs wurden verschiedene Architekturstile etabliert, wie die Hexagonal-Architektur, die Onion-Architektur und die Clean-Architektur. Diese Architekturen zielen darauf ab, die fachliche Komplexität von der technischen Umsetzung zu trennen. Diese Trennung führt zu einer besseren Wartbarkeit und Erweiterbarkeit der Software, da die Fachlichkeit unabhängig von der Technik entwickelt werden kann und Änderungen an der Technik im besten Fall keine Auswirkungen auf den fachlichen Code haben.Domain-Driven Design unterstützt bei der Umsetzung dieser Architekturen, indem es Ansätze in Form von Prinzipien, Methoden und Mustern bietet, um die fachliche Komplexität zu bewältigen und die Domäne klar in der Softwarearchitektur abzubilden.In diesem Talk geben wir zunächst einen kurzen Überblick über DDD allgemein und über die wichtigsten Muster dessen taktischen Designs. Im Hauptteil des Talks gehen wir dann auf die verschiedenen Architekturstile genauer ein. **Lernziele:** * Wie und warum haben sich die unterschiedlichen Architekturen entwickelt?* Welche Unterschiede und Gemeinsamkeiten haben die verschiedenen Architekturen – oder ist das letztlich nicht alles das Gleiche?* Welche typischen Problemstellungen ergeben sich bei der Verwendung derartiger Architekturen?* Für welche Art von Anwendungen sind diese Architekturen geeignet? **\|****Sprecherin:****Gulmariyam Yerzhanova** ist Junior Software Engineer bei Accso. Während ihres Studiums entdeckte sie ihre Leidenschaft für den Bereich Softwarearchitektur und Domain-Driven Design. Dies zeigt sich nicht nur in ihrer täglichen Arbeit, sondern auch in ihrem Streben nach kontinuierlicher Weiterbildung und persönlicher Entwicklung</summary></entry><entry><title type="html">Expand and Contract (Georg Berky)</title><link href="/rheinjug/event/2024/05/23/expand-and-contract-georg-berky.html" rel="alternate" type="text/html" title="Expand and Contract (Georg Berky) " /><published>2024-05-23T13:55:05+00:00</published><updated>2024-05-23T13:55:05+00:00</updated><id>/rheinjug/event/2024/05/23/expand-and-contract-georg-berky</id><content type="html" xml:base="/rheinjug/event/2024/05/23/expand-and-contract-georg-berky.html">&lt;p&gt;In den letzten Jahren hat sich das Tooling in den Bereichen Continuous Integration, Continuous Delivery und Infrastructure as Code erheblich verbessert. Pipelines, Builds und Deployments bekommt man oft schon mit der Source-Verwaltung geschenkt. Man sollte meinen, dass dank der neuen Tools jedes Team sofort mit mehreren Deployments pro Stunde direkt nach Production liefern könnte. Dem ist aber nicht so - und der Grund dafür liegt meistens nicht in den Tools.&lt;/p&gt;
&lt;p&gt;Expand and Contract ist eine Denk- und Entwicklungsweise, die essenziell ist für Continuous Delivery. In diesem Vortrag zeigt euch Georg mit viel Live Coding und ein wenig Theorie, welchen Weg er dahin genommen hat. Er beginnt mit einer Abneigung für unsichere Handarbeit und führt zu einer jederzeit unterbrech- und releasebaren Arbeitsweise, der Grundlage für Continuous Delivery.&lt;/p&gt;
&lt;p&gt;**Georg Berky**&lt;br /&gt;Georgs Handwerk und Leidenschaft ist die Programmierung, meistens in JVM-Sprachen wie Java, Groovy, Kotlin oder Clojure. &lt;/p&gt;
&lt;p&gt;Zum Handwerk gehören für ihn auch Themen wie die Pflege von Legacy Code, Automatisierung von Builds und Deployments oder Agilität im Team. Seit einigen Jahren ist er in der Software Crafting Community aktiv und Co-Organisator der Softwerkskammer im Ruhrgebiet. &lt;/p&gt;
&lt;p&gt;Wenn er mal nicht programmiert, spielt er Trompete, pflegt seine Bonsai oder praktiziert Aikido.&lt;/p&gt;</content><author><name></name></author><summary type="html">In den letzten Jahren hat sich das Tooling in den Bereichen Continuous Integration, Continuous Delivery und Infrastructure as Code erheblich verbessert. Pipelines, Builds und Deployments bekommt man oft schon mit der Source-Verwaltung geschenkt. Man sollte meinen, dass dank der neuen Tools jedes Team sofort mit mehreren Deployments pro Stunde direkt nach Production liefern könnte. Dem ist aber nicht so - und der Grund dafür liegt meistens nicht in den Tools. Expand and Contract ist eine Denk- und Entwicklungsweise, die essenziell ist für Continuous Delivery. In diesem Vortrag zeigt euch Georg mit viel Live Coding und ein wenig Theorie, welchen Weg er dahin genommen hat. Er beginnt mit einer Abneigung für unsichere Handarbeit und führt zu einer jederzeit unterbrech- und releasebaren Arbeitsweise, der Grundlage für Continuous Delivery. **Georg Berky**Georgs Handwerk und Leidenschaft ist die Programmierung, meistens in JVM-Sprachen wie Java, Groovy, Kotlin oder Clojure.  Zum Handwerk gehören für ihn auch Themen wie die Pflege von Legacy Code, Automatisierung von Builds und Deployments oder Agilität im Team. Seit einigen Jahren ist er in der Software Crafting Community aktiv und Co-Organisator der Softwerkskammer im Ruhrgebiet.  Wenn er mal nicht programmiert, spielt er Trompete, pflegt seine Bonsai oder praktiziert Aikido.</summary></entry><entry><title type="html">JUG Tour: Ed Burns und Sandra Ahlgrimm</title><link href="/rheinjug/event/2024/04/23/jug-tour-ed-burns-und-sandra-ahlgrimm.html" rel="alternate" type="text/html" title="JUG Tour: Ed Burns und Sandra Ahlgrimm " /><published>2024-04-23T13:55:05+00:00</published><updated>2024-04-23T13:55:05+00:00</updated><id>/rheinjug/event/2024/04/23/jug-tour-ed-burns-und-sandra-ahlgrimm</id><content type="html" xml:base="/rheinjug/event/2024/04/23/jug-tour-ed-burns-und-sandra-ahlgrimm.html">&lt;p&gt;Los geht es wieder mit der rheinjug und wir haben Ed Burns und Sandra Ahlgrimm von Microsoft am **Dienstag** den 23.04. zu Gast.&lt;/p&gt;
&lt;p&gt;Wir werden zwei Vorträge hören&lt;/p&gt;
&lt;p&gt;**Developer Career Masterplan: Build your path to senior level and beyond**&lt;/p&gt;
&lt;p&gt;Heather Vancura and Bruno Souza have a new book out on the topic of how to have a successful and rewarding career as a software developer. The title of this session is the title of the book. Ed Burns wrote a book on the same topic in 2008. In this 45-minute session Ed brings the insight he gained from writing his book to the task of interviewing Heather about the lessons she learned in interviewing a diverse selection of 26 successful developers. Between Ed, Heather, and the people they both interviewed, there is over a century of developer career experience in this talk! This informative and fun session will give you some practical tips to improve your own career.&lt;/p&gt;
&lt;p&gt;**Pioneering the Future of Java with Intelligent Apps**&lt;br /&gt;Disruptive changes are so called because they cut across traditional boundaries in whatever domain it is they are disrupting. This keynote from 30-year software industry veteran Ed Burns and cutting-edge AI practitioner Sandra Ahlgrimm explores the ways that AI can be practically applied in a typical contemporary cloud-native Java Azure application deployment. We take examples from a full-length workshop and examine each in the context of the AI and cloud-native application patterns being illustrated.&lt;br /&gt;· What is the state of the art for continuing to derive value from existing legacy enterprise Java software line-of-business (LOB) applications?&lt;br /&gt;· We will use a chatbot to interact with GPT-4 and implement the Retrieval Augmented Generation (RAG) pattern.&lt;br /&gt;· Using a vector database, the model will be able to answer questions in natural language and generate complete, sourced responses from your own documents.&lt;br /&gt;· How can AI augment legacy LOB apps?&lt;br /&gt;· We will create a Quarkus service based on the open-source LangChain4J and ChatBootAI frameworks to test our chatbot.&lt;br /&gt;· This being Global Azure Austria, naturally, these resources are deployed to Azure.&lt;br /&gt;After this keynote, you will have a clearer understanding of large language models and how they work, as well as ideas for using them in your applications. You will also know how to create a functional knowledge base and chatbot, and how to deploy them in the cloud.&lt;/p&gt;
&lt;p&gt;**Sandra Ahlgrimm**&lt;br /&gt;Sandra is a Cloud Developer Advocate focusing on microservice architectures and containers on prem and on the Azure platform. She helps in the Docker and Kubernetes communities whenever she can. She’s organizing the Berlin Docker Meetup. Sandra has a strong background in software development. She holds an M.Sc. in Media and Computer Science from Beuth University of Applied Sciences. During her studies, she worked in several start-ups and companies of Axel Springers where she gained expertise in setting up hybrid infrastructures, devops culture, and process automation. Sandra is a huge fan of event-driven architectures with real-time requirements.&lt;/p&gt;
&lt;p&gt;**Ed Burns**&lt;br /&gt;Ed Burns is currently Principal Architect on the Java Tooling and Experiences team at Microsoft. In this role, Ed will help make Azure the best place for Enterprise Java. Ed has worked on a wide variety of client and server side web technologies since 1994, including NCSA Mosaic, Netscape 6, Mozilla, the Sun Java Plugin, Jakarta Tomcat and JavaServer Faces, and the Servlet specification. Ed has lead or co-lead the expert groups for Servlet and JavaServer Faces. Ed has published four books with McGraw-Hill: JavaServerFaces: The Complete Reference (2006), Secrets of the Rockstar Programmers: Riding the IT crest (2008) JavaServer Faces 2.0: The Complete Reference (2010) and Hudson Continuous Integration In Practice (2013). To learn more about his books or projects, you can visit his website at &lt;a href=&quot;https://ridingthecrest.com/&quot; class=&quot;linkified&quot;&gt;https://ridingthecrest.com/&lt;/a&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html">Los geht es wieder mit der rheinjug und wir haben Ed Burns und Sandra Ahlgrimm von Microsoft am **Dienstag** den 23.04. zu Gast. Wir werden zwei Vorträge hören **Developer Career Masterplan: Build your path to senior level and beyond** Heather Vancura and Bruno Souza have a new book out on the topic of how to have a successful and rewarding career as a software developer. The title of this session is the title of the book. Ed Burns wrote a book on the same topic in 2008. In this 45-minute session Ed brings the insight he gained from writing his book to the task of interviewing Heather about the lessons she learned in interviewing a diverse selection of 26 successful developers. Between Ed, Heather, and the people they both interviewed, there is over a century of developer career experience in this talk! This informative and fun session will give you some practical tips to improve your own career. **Pioneering the Future of Java with Intelligent Apps**Disruptive changes are so called because they cut across traditional boundaries in whatever domain it is they are disrupting. This keynote from 30-year software industry veteran Ed Burns and cutting-edge AI practitioner Sandra Ahlgrimm explores the ways that AI can be practically applied in a typical contemporary cloud-native Java Azure application deployment. We take examples from a full-length workshop and examine each in the context of the AI and cloud-native application patterns being illustrated.· What is the state of the art for continuing to derive value from existing legacy enterprise Java software line-of-business (LOB) applications?· We will use a chatbot to interact with GPT-4 and implement the Retrieval Augmented Generation (RAG) pattern.· Using a vector database, the model will be able to answer questions in natural language and generate complete, sourced responses from your own documents.· How can AI augment legacy LOB apps?· We will create a Quarkus service based on the open-source LangChain4J and ChatBootAI frameworks to test our chatbot.· This being Global Azure Austria, naturally, these resources are deployed to Azure.After this keynote, you will have a clearer understanding of large language models and how they work, as well as ideas for using them in your applications. You will also know how to create a functional knowledge base and chatbot, and how to deploy them in the cloud. **Sandra Ahlgrimm**Sandra is a Cloud Developer Advocate focusing on microservice architectures and containers on prem and on the Azure platform. She helps in the Docker and Kubernetes communities whenever she can. She’s organizing the Berlin Docker Meetup. Sandra has a strong background in software development. She holds an M.Sc. in Media and Computer Science from Beuth University of Applied Sciences. During her studies, she worked in several start-ups and companies of Axel Springers where she gained expertise in setting up hybrid infrastructures, devops culture, and process automation. Sandra is a huge fan of event-driven architectures with real-time requirements. **Ed Burns**Ed Burns is currently Principal Architect on the Java Tooling and Experiences team at Microsoft. In this role, Ed will help make Azure the best place for Enterprise Java. Ed has worked on a wide variety of client and server side web technologies since 1994, including NCSA Mosaic, Netscape 6, Mozilla, the Sun Java Plugin, Jakarta Tomcat and JavaServer Faces, and the Servlet specification. Ed has lead or co-lead the expert groups for Servlet and JavaServer Faces. Ed has published four books with McGraw-Hill: JavaServerFaces: The Complete Reference (2006), Secrets of the Rockstar Programmers: Riding the IT crest (2008) JavaServer Faces 2.0: The Complete Reference (2010) and Hudson Continuous Integration In Practice (2013). To learn more about his books or projects, you can visit his website at https://ridingthecrest.com/</summary></entry><entry><title type="html">Dependency Updates automatisieren mit Renovate (Michael Vitz)</title><link href="/rheinjug/event/2023/11/23/dependency-updates-automatisieren-mit-renovate-michael-vitz.html" rel="alternate" type="text/html" title="Dependency Updates automatisieren mit Renovate (Michael Vitz)" /><published>2023-11-23T13:55:05+00:00</published><updated>2023-11-23T13:55:05+00:00</updated><id>/rheinjug/event/2023/11/23/dependency-updates-automatisieren-mit-renovate-michael-vitz</id><content type="html" xml:base="/rheinjug/event/2023/11/23/dependency-updates-automatisieren-mit-renovate-michael-vitz.html">&lt;p&gt;**Abstract:**&lt;br /&gt;In der Anwendungsentwicklung müssen wir heute nicht mehr alles selbst erfinden, sondern wir nutzen Bibliotheken von Drittanbietern. Mit den Vorteilen dieser Bibliotheken geht jedoch auch die Verantwortung einher, sie regelmäßig zu aktualisieren, um potenzielle Sicherheitsrisiken zu minimieren. Die zeitnahe Durchführung dieser Updates, ohne das Überspringen von Releases, reduziert dabei Risiko und Aufwand. In diesem Vortrag wird deswegen Renovate vorgestellt, ein Open-Source-Bot für das automatisiertes Updaten von Abhängigkeiten.&lt;/p&gt;
&lt;p&gt;**Sprecher:**&lt;br /&gt;Michael verfügt über mehr als fünfzehn Jahre Erfahrung in der Entwicklung, Wartung und im Betrieb von Anwendungen auf der JVM. Als Senior Consultant bei INNOQ hilft er Kunden, wartbare und wertschaffende Software zu entwickeln und zu betreiben. Daneben bringt er sich in Open-Source-Projekten ein, schreibt Fachartikel, hält Vorträge und ist seit 2021 Java Champion.&lt;/p&gt;</content><author><name></name></author><summary type="html">**Abstract:**In der Anwendungsentwicklung müssen wir heute nicht mehr alles selbst erfinden, sondern wir nutzen Bibliotheken von Drittanbietern. Mit den Vorteilen dieser Bibliotheken geht jedoch auch die Verantwortung einher, sie regelmäßig zu aktualisieren, um potenzielle Sicherheitsrisiken zu minimieren. Die zeitnahe Durchführung dieser Updates, ohne das Überspringen von Releases, reduziert dabei Risiko und Aufwand. In diesem Vortrag wird deswegen Renovate vorgestellt, ein Open-Source-Bot für das automatisiertes Updaten von Abhängigkeiten. **Sprecher:**Michael verfügt über mehr als fünfzehn Jahre Erfahrung in der Entwicklung, Wartung und im Betrieb von Anwendungen auf der JVM. Als Senior Consultant bei INNOQ hilft er Kunden, wartbare und wertschaffende Software zu entwickeln und zu betreiben. Daneben bringt er sich in Open-Source-Projekten ein, schreibt Fachartikel, hält Vorträge und ist seit 2021 Java Champion.</summary></entry><entry><title type="html">Frontends - Die andere Seite des REST-Calls (Daniel Zenzes)</title><link href="/rheinjug/event/2023/10/05/frontends-die-andere-seite-des-rest-calls-daniel-zenzes.html" rel="alternate" type="text/html" title="Frontends - Die andere Seite des REST-Calls (Daniel Zenzes)" /><published>2023-10-05T13:55:05+00:00</published><updated>2023-10-05T13:55:05+00:00</updated><id>/rheinjug/event/2023/10/05/frontends---die-andere-seite-des-rest-calls-daniel-zenzes</id><content type="html" xml:base="/rheinjug/event/2023/10/05/frontends-die-andere-seite-des-rest-calls-daniel-zenzes.html">&lt;p&gt;Der Einlass in Hörsaal 5C beginnt um 18:30, der Vortrag startet um 19:00 Uhr&lt;/p&gt;
&lt;p&gt;Abstract:&lt;br /&gt;Für Java-Entwickler, die den Sprung ins Frontend wagen (2023 Edition)&lt;/p&gt;
&lt;p&gt;Das Frontend-Ökosystem hat den Ruf, ständig im Wandel zu sein – manch einer behauptet, es gäbe hier jedes Jahr ein neues Framework, dass man nutzen muss. Wie soll man hier also den Überblick behalten und wie kann ich als Java-Entwickler auch im Frontend unterstützen?&lt;/p&gt;
&lt;p&gt;In diesem Talk gebe ich Euch einen (opinionated) Überblick über den aktuellen Stand der Frontend Welt: Welche Pattern (SPA, SSR, SSG) finden Anwendung, welche Frameworks und Technologien sind hier einen Blick wert. Abgerundet wird dies mit einer Übersicht über die aktuelle Tool Welt: was gibt es und wozu brauchen wir es.&lt;/p&gt;
&lt;p&gt;Der Sprecher:&lt;br /&gt;Daniel Zenzes ist Principal Software Engineer bei der adesso SE mit einem Schwerpunkt auf Frontend-Entwicklung. Besonders gerne arbeitet er hier mit React, Vue und Svelte, er beschäftigt sich aber auch mit agilen Methoden und TDD. In seiner Freizeit produziert er den Podcast [Herr Zenzes wills wissen](&lt;a href=&quot;https://zenzes.me/podcast/&quot; class=&quot;linkified&quot;&gt;https://zenzes.me/podcast/&lt;/a&gt;) sowie, zusammen mit Sandra Parsick, den IT-Podcast [Ready for Review](&lt;a href=&quot;https://ready-for-review.dev/&quot; class=&quot;linkified&quot;&gt;https://ready-for-review.dev/&lt;/a&gt;).&lt;/p&gt;</content><author><name></name></author><summary type="html">Der Einlass in Hörsaal 5C beginnt um 18:30, der Vortrag startet um 19:00 Uhr Abstract:Für Java-Entwickler, die den Sprung ins Frontend wagen (2023 Edition) Das Frontend-Ökosystem hat den Ruf, ständig im Wandel zu sein – manch einer behauptet, es gäbe hier jedes Jahr ein neues Framework, dass man nutzen muss. Wie soll man hier also den Überblick behalten und wie kann ich als Java-Entwickler auch im Frontend unterstützen? In diesem Talk gebe ich Euch einen (opinionated) Überblick über den aktuellen Stand der Frontend Welt: Welche Pattern (SPA, SSR, SSG) finden Anwendung, welche Frameworks und Technologien sind hier einen Blick wert. Abgerundet wird dies mit einer Übersicht über die aktuelle Tool Welt: was gibt es und wozu brauchen wir es. Der Sprecher:Daniel Zenzes ist Principal Software Engineer bei der adesso SE mit einem Schwerpunkt auf Frontend-Entwicklung. Besonders gerne arbeitet er hier mit React, Vue und Svelte, er beschäftigt sich aber auch mit agilen Methoden und TDD. In seiner Freizeit produziert er den Podcast [Herr Zenzes wills wissen](https://zenzes.me/podcast/) sowie, zusammen mit Sandra Parsick, den IT-Podcast [Ready for Review](https://ready-for-review.dev/).</summary></entry><entry><title type="html">Java Next - von Amber zu Loom, von Panama zu Valhalla (Nicolai Parlog)</title><link href="/rheinjug/event/2023/07/20/java-next-von-amber-zu-loom-von-panama-zu-valhalla-nicolai-parlog.html" rel="alternate" type="text/html" title="Java Next - von Amber zu Loom, von Panama zu Valhalla (Nicolai Parlog)" /><published>2023-07-20T13:55:05+00:00</published><updated>2023-07-20T13:55:05+00:00</updated><id>/rheinjug/event/2023/07/20/java-next---von-amber-zu-loom-von-panama-zu-valhalla-nicolai-parlog</id><content type="html" xml:base="/rheinjug/event/2023/07/20/java-next-von-amber-zu-loom-von-panama-zu-valhalla-nicolai-parlog.html">&lt;p&gt;Javas vier große Projekte sind auf die Zielgerade eingebogen:&lt;/p&gt;
&lt;p&gt;Amber, Panama und Loom haben ihre Kern-Features bereit inkubiert,&lt;br /&gt;gepreviewt oder sogar finalisiert und Valhalla ist nicht weit davon&lt;br /&gt;entfernt.&lt;br /&gt;Es wird also Zeit, sich genauer anzugucken wie...&lt;/p&gt;
&lt;p&gt;* Project Amber Java ausdrucksstärker macht und auf die Probleme von&lt;br /&gt;heute und morgen anpasst&lt;br /&gt;* Project Panama den Isthmus durchschneidet, der Java von nativem Code trennt&lt;br /&gt;* Project Loom mühelose, effiziente und struktuierte Concurrency erlaubt&lt;br /&gt;* Project Valhalla die Spaltung in Javas Typsystem heilt und Performance verbessert&lt;/p&gt;
&lt;p&gt;Nach diesem Vortrag weißt du, wie Java sich in den kommenden Jahren&lt;br /&gt;weiterentwickeln wird.&lt;/p&gt;
&lt;p&gt;Über den Sprecher:&lt;br /&gt;Nicolai (aka nipafx) ist ein Java-Enthusiast mit Fokus auf Sprachfeatures und APIs, der leidenschaftlich gerne lernt und lehrt. Das&lt;br /&gt;macht er in Blog Posts, Newslettern und Büchern; in Tweets, Videos und&lt;br /&gt;Streams; in Demo Repositories und auf Konferenzen - mehr dazu auf [nipafx.dev](nipafx.dev). Er ist Java Developer Advocate bei Oracle und Organisator&lt;br /&gt;von [Accento](&lt;a href=&quot;https://accento.dev&quot; class=&quot;linkified&quot;&gt;https://accento.dev&lt;/a&gt;) . Davon abgesehen kennt man ihn für seine Frisur.&lt;/p&gt;</content><author><name></name></author><summary type="html">Javas vier große Projekte sind auf die Zielgerade eingebogen: Amber, Panama und Loom haben ihre Kern-Features bereit inkubiert,gepreviewt oder sogar finalisiert und Valhalla ist nicht weit davonentfernt.Es wird also Zeit, sich genauer anzugucken wie... * Project Amber Java ausdrucksstärker macht und auf die Probleme vonheute und morgen anpasst* Project Panama den Isthmus durchschneidet, der Java von nativem Code trennt* Project Loom mühelose, effiziente und struktuierte Concurrency erlaubt* Project Valhalla die Spaltung in Javas Typsystem heilt und Performance verbessert Nach diesem Vortrag weißt du, wie Java sich in den kommenden Jahrenweiterentwickeln wird. Über den Sprecher:Nicolai (aka nipafx) ist ein Java-Enthusiast mit Fokus auf Sprachfeatures und APIs, der leidenschaftlich gerne lernt und lehrt. Dasmacht er in Blog Posts, Newslettern und Büchern; in Tweets, Videos undStreams; in Demo Repositories und auf Konferenzen - mehr dazu auf [nipafx.dev](nipafx.dev). Er ist Java Developer Advocate bei Oracle und Organisatorvon [Accento](https://accento.dev) . Davon abgesehen kennt man ihn für seine Frisur.</summary></entry><entry><title type="html">Was jeder Java-Entwickler über Offensive Security wissen sollte (Kai Ullrich)</title><link href="/rheinjug/event/2023/05/25/was-jeder-java-entwickler-ueber-offensive-security-wissen-sollte-kai-ullrich.html" rel="alternate" type="text/html" title="Was jeder Java-Entwickler über Offensive Security wissen sollte (Kai Ullrich)" /><published>2023-05-25T13:55:05+00:00</published><updated>2023-05-25T13:55:05+00:00</updated><id>/rheinjug/event/2023/05/25/was-jeder-java-entwickler-ueber-offensive-security-wissen-sollte-kai-ullrich</id><content type="html" xml:base="/rheinjug/event/2023/05/25/was-jeder-java-entwickler-ueber-offensive-security-wissen-sollte-kai-ullrich.html">&lt;p&gt;*Abstract:*&lt;br /&gt;*Die meisten haben die Schockwellen von log4shell mitbekommen, aber wussten Sie auch, dass die zugrundeliegende Exploitation-Technik bereits seit 2016 wohlbekannt war? Und dass sie auch bei anderen Schwachstellen für Angreifer zentrale Wichtigkeit hat? Wussten Sie, dass XSL-Transformation brandgefährlich sein kann? Können Sie sich vorstellen, wie das Model-Binding in Spring MVC im April 2022 perfide ausgenutzt wurde, um Schadcode auf die Zielmaschine zu bringen?*&lt;br /&gt; &lt;br /&gt;*Tauchen Sie mit dem Referenten für eine Stunde ein in die Welt der Java-Schwachstellen und ihrer Ausnutzung und erweitern Sie Ihren Horizont um Dinge, die in ihrem nächsten Projekt den Unterschied machen könnten zwischen sicher und unsicher.*&lt;br /&gt; &lt;br /&gt;Sprecher:&lt;br /&gt;*Kai Ullrich blickt zurück auf beinahe 25 Jahre in der IT-Sicherheit. Die vergangenen sechs Jahre hat er sich mit Penetration Testing und Sicherheitsforschung befasst. In dieser Zeit fand er zahlreiche 0-day-Schwachstellen in namhaften Produkten. Aktuell ist er tätig als freischaffender Berater für Cyber-Sicherheit und unterstützt seine Kunden dabei, organisch das Sicherheitsniveau ihrer Organisation zu erhöhen.*&lt;/p&gt;
&lt;p&gt;Informationen zur Veranstaltung:&lt;/p&gt;
&lt;p&gt;Wir werden uns wieder an der Universität Düsseldorf treffen. Eine genauere Anfahrtsbescheibung findet ihr hier: &lt;a href=&quot;http://rheinjug.de/anreise.html&quot; class=&quot;linkified&quot;&gt;http://rheinjug.de/anreise.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Wir starten mit dem Vortrag um 19:00 Uhr. Wir werden Getränke bereitstellen, es wird allerdings nichts zu essen geben, stärkt euch also vorher noch etwas.&lt;/p&gt;</content><author><name></name></author><summary type="html">*Abstract:**Die meisten haben die Schockwellen von log4shell mitbekommen, aber wussten Sie auch, dass die zugrundeliegende Exploitation-Technik bereits seit 2016 wohlbekannt war? Und dass sie auch bei anderen Schwachstellen für Angreifer zentrale Wichtigkeit hat? Wussten Sie, dass XSL-Transformation brandgefährlich sein kann? Können Sie sich vorstellen, wie das Model-Binding in Spring MVC im April 2022 perfide ausgenutzt wurde, um Schadcode auf die Zielmaschine zu bringen?* *Tauchen Sie mit dem Referenten für eine Stunde ein in die Welt der Java-Schwachstellen und ihrer Ausnutzung und erweitern Sie Ihren Horizont um Dinge, die in ihrem nächsten Projekt den Unterschied machen könnten zwischen sicher und unsicher.* Sprecher:*Kai Ullrich blickt zurück auf beinahe 25 Jahre in der IT-Sicherheit. Die vergangenen sechs Jahre hat er sich mit Penetration Testing und Sicherheitsforschung befasst. In dieser Zeit fand er zahlreiche 0-day-Schwachstellen in namhaften Produkten. Aktuell ist er tätig als freischaffender Berater für Cyber-Sicherheit und unterstützt seine Kunden dabei, organisch das Sicherheitsniveau ihrer Organisation zu erhöhen.* Informationen zur Veranstaltung: Wir werden uns wieder an der Universität Düsseldorf treffen. Eine genauere Anfahrtsbescheibung findet ihr hier: http://rheinjug.de/anreise.html Wir starten mit dem Vortrag um 19:00 Uhr. Wir werden Getränke bereitstellen, es wird allerdings nichts zu essen geben, stärkt euch also vorher noch etwas.</summary></entry></feed>